#+title: Конвертер валют

Простое приложение для конвертации валют

#+html: <a href>
#+html:   <img src="assets/1.jpg" width="260"/>
#+html:   <img src="assets/2.jpg" width="260"/>
#+html:   <img src="assets/3.jpg" width="260"/>
#+html: </a>

* Запуск
- Для сборки использовалась Android Studio Koala 2024.1.1 c Android Gradle Plugin версии 8.5.1
- В файл =local.properties= в корне проекта положить константы =BASE_URL= и =API_KEY=
#+begin_src
BASE_URL="https://api.freecurrencyapi.com/v1/"
API_KEY="<ваш_api_key>"
#+end_src

* Описание реализации
Состоит из двух экранов
1. Экран ввода данных
2. Экран отображения результата

** Экран ввода данных
Содержит:
- Поле ввода суммы конвертации
- Выпадающие списки для выбора базовой валюты и валюты конвертации
- Кнопку для запуска конвертации

*** Архитектура презентационного слоя
В качестве архитектуры выбрана реализация MVI по следующей схеме:
#+html: <a href>
#+html:   <img src="assets/mvi.jpg"/>
#+html: </a>

**** Компоненты
- =Actor= - объект для выполнения сложных операций и похода в сеть, реализован через [[https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html][actor]]
- =Reducer= - компонент, отвечающий за изменение состояния экрана
- =State= - состояние экрана
  - State value - текущее значение состояния
  - State update - обновление состояния

**** Действия
- =Event= - события, направленные на изменение состояния
  - =User= - событие взаимодействия пользователя с интерфейсом
  - =System= - внутреннее событие, несущее в себе результат выполнения операции
- =Command= - команда для =Actor= на выполнение сложной операции
- =Effect= - событие, требующее обработки один раз

**** Переходы
- Сплошная линия - прямой вызов
- Пунктирная линия - экспорт с помощью [[https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/][Flow]]

** Экран отображения результата
- Отображает сконвертированную сумму в выбранной валюте

** Получение данных
- Для получения текущих курсов валют используется [[https://freecurrencyapi.com][freecurrencyapi]]
- Работа с API реализована с использованием [[https://square.github.io/retrofit/][Retrofit]] и [[https://square.github.io/okhttp/][OkHttp]]

** Реактивный подход
- Для асинхронной работы с сетью использованы [[https://github.com/Kotlin/kotlinx.coroutines][KotlinX Coroutines]]

** Дополнительно
- Поддержаны портретная и ландшафтная ориентации экрана
- Поддержаны темная и светлая тема
- Переведено на русский и английский языки

* Описание модулей
- =core:domain= - модуль с базовыми сущностями
- =core:network= - модуль с базовой функциональносью работы с сетью
- =core:ui= - общие ресурсы и утилиты для inject'a ViewModel'ей
- =core:util= - полезные extension функции
- =features:converter= - экран ввода данных и конвертации
- =features:conversion-result= - экран отображения результата конвертации
- =app= - сборка приложения

* Технологический стек
- Android SDK
- [[https://developer.android.com/jetpack][Android Jetpack]]
- [[https://kotlinlang.org/docs/whatsnew20.html][Kotlin 2.0]]
- [[https://github.com/Kotlin/kotlinx.coroutines][KotlinX Coroutines]]
- [[https://github.com/Kotlin/kotlinx.serialization][KotlinX Serialization]]
- [[https://square.github.io/retrofit/][Retrofit]] + [[https://square.github.io/okhttp/][OkHttp]]
- [[https://developer.android.com/develop/ui/compose][Jetpack Compose]]
- [[https://developer.android.com/develop/ui/compose/navigation][Jetpack Compose Navigation]]
- [[https://dagger.dev][Dagger]]
- [[https://github.com/material-components/material-components-android][Material]]
